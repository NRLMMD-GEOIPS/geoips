 | # # # Distribution Statement A. Approved for public release. Distribution unlimited.
 | # # #
 | # # # Author:
 | # # # Naval Research Laboratory, Marine Meteorology Division
 | # # #
 | # # # This program is free software: you can redistribute it and/or modify it under
 | # # # the terms of the NRLMMD License included with this program. This program is
 | # # # distributed WITHOUT ANY WARRANTY; without even the implied warranty of
 | # # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the included license
 | # # # for more details. If you did not receive the license, for more information see:
 | # # # https://github.com/U-S-NRL-Marine-Meteorology-Division/

Version 1.12.2a0 (2024-02-21)
*****************************

* Bug Fixes

  * Fix polar data not showing up in imagery
  * Ensure that log.interactive works from plugins when imported independently.
  * Make add_log_level a callable class to fix AttributeErrors.

* Refactor

  * Make JSON Plugin Registries Readable

Bug Fixes
=========

Fix polar data not showing up in imagery
----------------------------------------

*From GEOIPS#431: 2024-02-06, Look into polar projections in pyresample wrappers*

Currently products with polar projection sectors do not plot. Initial investigations
indicate pre-sectoring the data does not work well with data over the poles. It seems
passing ``--no-presectoring`` option at the command line helps - but there may be
additional issues with polar projections.

It was found that we are misinterpreting how pyresample's AreaDefinition attribute
``area_extent_ll`` is formulated. For polar sectors, when looking at such attribute,
it has been found that ``min_lat`` and ``max_lat`` values are extremely close to each
other, if not equal. While internally the AreaDefinition includes data from min_lat to
max_lat over the poles, we are interpretting those values as a line or a very small
swath, which usually misses some, if not all of the data you're attempting to plot.

We've added additional checks within ``geoips/xarray_utils/data.py`` --
``sector_xarray_spatial``, to modify the area_extent_ll to reflect the actual bounds
we want to include in our sectored data. While it may capture a greater area than
necessary, we fix the problem of missing data for polar imagery.

::

    added: geoips/plugins/yaml/gridline_annotators/north_pole.yaml
    added: tests/scripts/viirsclearnight.Night-Vis-IR-GeoIPS1.imagery_annotated.sh
    added: tests/unit_tests/xarray_utils/data.py
    modified: geoips/plugins/yaml/sectors/static/abu_dhabi.yaml
    modified: geoips/plugins/yaml/sectors/static/north_pole.yaml
    modified: geoips/plugins/yaml/sectors/static/south_pole.yaml
    modified: geoips/plugins/modules/procflows/single_source.py
    modified: geoips/xarray_utils/data.py

Make add_log_level a callable class, ensure log.interactive works consistently
------------------------------------------------------------------------------

*From GEOIPS#446: 2024-02-21, Move addition of interactive log level into __init__*
*From GEOIPS#446: 2024-02-21, Make add_log_level a callable class to fix AttributeErrors*

Remove call to ``add_log_level()`` from ``setup_logging()`` and into ``geoips/__init__.py``.
This makes ``log.interactive()`` available to all components of GeoIPS, regardless of how
they are accessed. Previously, if a plugin was used without the rest of GeoIPS (e.g. a
reader) it would raise an ``AttributeError`` if it called ``log.interactive()``.

This additionally makes add_log_level into a callable class called LogLevelAdder which must
be instantiated prior to use. This fixes a problem where AttributeErrors were raised from
time to time. The way that they occurred required them to be ignored, even when they were
useful. Now, only useful AttributeErrors should be raised.

::

    modified: geoips/__init__.py
    modified: geoips/commandline/log_setup.py
    added: tests/unit_tests/commandline/log_setup.py

Refactor
========

Make JSON Plugin Registries Readable
------------------------------------

*From GEOIPS#429: 2024-02-02, Plugin Registries Should Be Readable*

Currently, the JSON output of the plugin registries is a hodge-podge full of text. We
should refactor the way in which these plugin registries are outputted, so that they are
in a human readable, interpretable format. To do so, we need to add the argument
``indent=4`` to the ``json.dump`` call in ``write_plugin_registries``.

::

    modified: geoips/create_plugin_registries.py
