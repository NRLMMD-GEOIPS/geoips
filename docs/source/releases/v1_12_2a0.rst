 | # # # Distribution Statement A. Approved for public release. Distribution unlimited.
 | # # #
 | # # # Author:
 | # # # Naval Research Laboratory, Marine Meteorology Division
 | # # #
 | # # # This program is free software: you can redistribute it and/or modify it under
 | # # # the terms of the NRLMMD License included with this program. This program is
 | # # # distributed WITHOUT ANY WARRANTY; without even the implied warranty of
 | # # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the included license
 | # # # for more details. If you did not receive the license, for more information see:
 | # # # https://github.com/U-S-NRL-Marine-Meteorology-Division/

Version 1.12.2a0 (2024-02-21)
*****************************

* Enhancements

  * Added log with emphasis function

* Bug fixes

  * Ensure that log.interactive works from plugins when imported independently.
  * Make add_log_level a callable class to fix AttributeErrors.
  * Remove inconsistent unit test test_log_interactive_non_geoips

* Refactor

  * Make JSON Plugin Registries Readable


Enhancements
============

Added Log with Emphasis function
--------------------------------

Scattered throughout GeoIPS (and other packages too), are many Log statements that use
'***********************...' to emphasize the content in between them. While this is
easy to see in the Log output, it's extremely cluttered in the actual code. For this
reason, I've added a 'log_with_emphasis' function to handle this. All you need to do now
is 'log_with_emphasis(LOG.<log_type>, message)', and it will do the rest for you.

::

    modified: geoips/geoips/commandline/log_setup.py
    modified: geoips/geoips/interfaces/module_based/output_checkers.py
    modified: geoips/geoips/plugins/modules/output_checkers/geotiff.py
    modified: geoips/geoips/plugins/modules/output_checkers/image.py
    modified: geoips/geoips/plugins/modules/output_checkers/netcdf.py
    modified: geoips/geoips/plugins/modules/output_checkers/text.py
    modified: geoips/geoips/plugins/modules/procflows/single_source.py
    added: geoips/tests/unit_tests/commandline/log_setup.py


Bug Fixes
=========

Make add_log_level a callable class, ensure log.interactive works consistently
------------------------------------------------------------------------------

*From GEOIPS#446: 2024-02-21, Move addition of interactive log level into __init__*
*From GEOIPS#446: 2024-02-21, Make add_log_level a callable class to fix AttributeErrors*

Remove call to ``add_log_level()`` from ``setup_logging()`` and into ``geoips/__init__.py``.
This makes ``log.interactive()`` available to all components of GeoIPS, regardless of how
they are accessed. Previously, if a plugin was used without the rest of GeoIPS (e.g. a
reader) it would raise an ``AttributeError`` if it called ``log.interactive()``.

This additionally makes add_log_level into a callable class called LogLevelAdder which must
be instantiated prior to use. This fixes a problem where AttributeErrors were raised from
time to time. The way that they occurred required them to be ignored, even when they were
useful. Now, only useful AttributeErrors should be raised.

::

    modified: geoips/__init__.py
    modified: geoips/commandline/log_setup.py
    added: tests/unit_tests/commandline/log_setup.py

Remove inconsistent unit test test_log_interactive_non_geoips
-------------------------------------------------------------

The recently added ``test_log_interactive_non_geoips`` unit test is inconsistent. It
sometimes successfully raises an ``AttributeError`` but not always. This is due to
GeoIPS polluting the ``logging`` class when adding new logging levels. The polluted
``logging`` class does not appear to be a problem, though, since it adds functionality
without impacting existing functionality. It appears safe to allow this pollution.

::

    modified: tests/unit_tests/commandline/log_setup.py

Refactor
========

Make JSON Plugin Registries Readable
------------------------------------

*From GEOIPS#429: 2024-02-02, Plugin Registries Should Be Readable*

Currently, the JSON output of the plugin registries is a hodge-podge full of text. We
should refactor the way in which these plugin registries are outputted, so that they are
in a human readable, interpretable format. To do so, we need to add the argument
``indent=4`` to the ``json.dump`` call in ``write_plugin_registries``.

::

    modified: geoips/create_plugin_registries.py
