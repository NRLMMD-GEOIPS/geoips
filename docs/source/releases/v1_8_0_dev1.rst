 | # # # Distribution Statement A. Approved for public release. Distribution unlimited.
 | # # #
 | # # # Author:
 | # # # Naval Research Laboratory, Marine Meteorology Division
 | # # #
 | # # # This program is free software: you can redistribute it and/or modify it under
 | # # # the terms of the NRLMMD License included with this program. This program is
 | # # # distributed WITHOUT ANY WARRANTY; without even the implied warranty of
 | # # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the included license
 | # # # for more details. If you did not receive the license, for more information see:
 | # # # https://github.com/U-S-NRL-Marine-Meteorology-Division/

Version 1.8.0.dev1 (2023-02-27)
*******************************

* Add Python module based plugin interface

Bug fixes
=========

Allow loading full-disk ABI imagery without an area definition
--------------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#100: 2023-02-22, bug in abi netcdf reader*

::

    geoips/interface_modules/readers/abi_netcdf.py
    
Do not attempt to import module prior to passing into plugin_module_to_obj
--------------------------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

New style plugins are already valid modules upon identifying via entry points
(since we now point to the full module in setup.py vs individual functions for old
style plugins).

Old style plugins must first identify the module via ep.__module__, then import
that module to pass into plugin_module_to_obj.

Additionally - must check that the entry point is NOT a Callable instance to determine
if it is a new-style plugin, vs checking that the entry point has an attribute named
"call".  This matches how we determine if a plugin is a new style plugin in
plugin_module_to_obj.

::

    geoips/interfaces/base.py, get_plugins function

Include full entry point path for deprecated plugin names
---------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

If "name" is not set as an attribute on a plugin, that means we must use the
deprecated functionality of determining the plugin name from the entry point.

Initially the "name" was getting set only to the function name - this caused issues
when attempting to re-import the plugin via entry points (since it would look for
e.g. pmw_89pct based on the function name, but the entry point is e.g. pmw_tb.pmw_89pct)

Ensure the deprecated names get set to the full path after "interface_modules", which
will match what is set within setup.py.

For "new" style plugins, this is not an issue because we are only using the module-level
imports within the Base Interface - since we are assuming the function name is "call".

::

    geoips/interfaces/base.py, plugin_module_to_obj function

Add "self" to plugin_module_to_obj calls in "get_plugins"
---------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

Fixed incorrect calls to plugin_module_to_obj from within get_plugins method.
This was previously untested (prior to implementing "test_interfaces"

::

    modified:   geoips/interfaces/base.py

Removed unused import of Hashable
---------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

::

    geoips/interface_modules/readers/abi_netcdf.py
    geoips/interface_modules/readers/ahi_hsd.py

Switched coverage from positional parameter to keyword argument
---------------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

Standard filename format expects "coverage" to be a keyword argument, not a positional
parameter.  Update filename formats accordingly so test_interfaces passes.

::

    modified: geoips/interface_modules/filename_formats/geoips_fname.py
    modified: geoips/interface_modules/filename_formats/geotiff_fname.py
    modified: geoips/interface_modules/filename_formats/tc_clean_fname.py
    modified: geoips/interface_modules/filename_formats/tc_fname.py
    
Require flake8-docstrings in setup.py
-------------------------------------

*From issue NRLMMD-GEOIPS/geoips#96: 2023-02-13, Require flake8-docstrings in setup.py*

* setup.py:
  * Add flake8-docstrings to requirements in setup.py

Update FilenameFormats class name
---------------------------------

*From issue NRLMMD-GEOIPS/geoips#92: 2023-02-09, update FilenameFormats class name*

* filename_formats.py:
  * Renamed FilenameFormattersInterface class to FilenameFormats

Typo fixes
----------

*From issue NRLMMD-GEOIPS/geoips#69, 2023-02-06, bug fixes*

* Remove extra "," at the end of filename formats without covg list
  * Previously was attempting to match a list of lists, causing "unsectored" test
    output to fail since it was attempting to match the full list of filename formats,
    rather than the single filename format string.
  * Moving the lists to global variables at the top just happened to remove the errant
    comma.

::

    modified: geoips/interface_modules/procflows/single_source.py

* Replace pmw_37pct callable function name of "call" with "pmw_37pct"
  * pmw_37pct plugin will serve as the token example of the fully updated formatting,
    but for now using "call" as the callable function name is not quite working.
  * Leave callable function name as pmw_37pct until "call" is working.

::
    modified: geoips/interface_modules/algorithms/pmw_tb/pmw_37pct.py

* Remove style_tests.sh - replaced with tests/utils/code_checks.sh

::
    deleted: style_tests.sh


Refactoring Updates
===================

Move __version__ to its own file
--------------------------------

*From issue NRLMMD-GEOIPS/geoips#102: 2023-02-22, improve imports*

* Move version resolution from `__init__.py` to `__version__.py`

::

    geoips/__version__.py
    geoips/__init__.py

Improve imports in __init__ to support implicitly finding interfaces for testing
--------------------------------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#102: 2023-02-22, improve imports*

* Explicitly add submodule imports to `__init__.py`
* Make `commandline.test_interfaces.main` implicitly find interfaces for testing by
  inspecting `interfaces.__dict__.values()`

::

    geoips/__init__.py
    geoips/commandline/test_interfaces.py, main function

Move CoverageError to top level module
--------------------------------------

*From issue NRLMMD-GEOIPS/geoips#67: 2023-02-09, move CoverageError to top-level*

* Moved CovereageError from geostationary_geolocation.py
  (in geoips.interface_modules.readers.utils) to errors.py (top-level geoips)
* Updated imports in config_based.py that utilize CoverageError.

Code Formatting and Style Updates
=================================

Applied linter conventions to abi_netcdf.py
-------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#100: 2023-02-22, bug in abi netcdf reader*

::

    geoips/interface_modules/readers/abi_netcdf.py


Testing Updates
===============

Updated 89pct and 37pct products for function name "call"
---------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

* Replaced pmw_37pct and pmw_89pct algorithm function names with default "call"
* Updated setup.py to point to pmw_37pct module vs pmw_37pct.pmw_37pct Callable
  function.
* This provides 2 working examples of fully updated plugins.

::

        modified:   geoips/interface_modules/algorithms/pmw_tb/pmw_37pct.py
        modified:   geoips/interface_modules/algorithms/pmw_tb/pmw_89pct.py
        modified:   setup.py

Add validation tests to Base interface class
--------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

* plugin_is_valid: Added checks for required arguments and keyword arguments
  to determine if a plugin call signature matches what is expected

  * expected_kwargs supports lists of tuples - to allow specifying both the kwarg name
    and the default value.

* test_interface: ensure all methods are functional, and all plugins are valid
* plugins_all_valid: returns True if all plugins in the current interface are valid,
  False if any plugins are invalid (calls "plugin_is_valid" on each plugin)

::

    modified:   geoips/interfaces/base.py

Add separate interface tests for deprecated and new interfaces
--------------------------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

* Move tests for deprecated interfaces to a separate function - will eventually be
  removed.
* Call only "test_interfaces" for all new-style interfaces.

  * "test_interface_plugins" actually tests every interface method, to ensure all work.

    * get_plugins
    * plugins_all_valid
    * get_plugin
    * plugin_is_valid
    * Check every attribute (family, name, description)

* Add logic to save lists of successful and failed interfaces - print all status at
  the end, and only raise an error after printing full list of successful/failed
  plugins.

::

    modified:   geoips/commandline/test_interfaces.py

Update interface modules for validation testing
-----------------------------------------------

*From issue NRLMMD-GEOIPS/geoips#91: 2023-02-14, update test_interfaces*

* Add required_args and required_kwargs to all interface modules

  * required_kwargs includes lists of tuples - to allow specifying required
    default values.
  * required_args includes lists of strings

* Standardize interface class names

  * FilenameFormats -> FilenameFormatsInterface
  * ColorMapInterface -> ColormapsInterface
  * TitleFormattersInterface -> TitleFormatsInterface

::

    modified:   geoips/interfaces/algorithms.py
    modified:   geoips/interfaces/colormaps.py
    modified:   geoips/interfaces/filename_formats.py
    modified:   geoips/interfaces/interpolators.py
    modified:   geoips/interfaces/output_formats.py
    modified:   geoips/interfaces/procflows.py
    modified:   geoips/interfaces/readers.py
    modified:   geoips/interfaces/title_formats.py

Add clone and test of all available repos and test datasets.
------------------------------------------------------------

* recenter_tc
* data_fusion

::
    modified: tests/test_full_install.sh


Documentation Updates
=====================

Add interface class docstrings
------------------------------

*From issue NRLMMD-GEOIPS/geoips#71: 2023-02-10, add interface class docstrings*

Added basic docstrings based on geoips_overview documentation to the following
  interface classes:
    * algorithms
    * boundaries
    * colormaps
    * filename_formats
    * interpolators
    * output_formats
    * procflows
    * readers
    * title_formats



## NRLMMD-GEOIPS/geoips#73: 2023-01-25, update BaseInterface method names
### Refactor
* Update `BaseInterface.get` to `BaseInterface.get_plugin`
* Update `BaseInterface.get_list` to `BaseInterface.get_plugins`
* Replace all uses of both methods across entire package
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Deprecations
* A module-based Plugin will raise a DeprecationWarning if it does not define:
  * a module-level docstring
  * a "name" module-level variable - Defaults to the module name for now
  * a "family" module-level variable - Defaults to an interface specific value
  * a "description" module-level variable - Defaults to an empty string
  * a function named "call" - Defaults to the name of the module for now
* A module-based plugin Interface will raise a DeprecationWarning if it sets an
  "entry_point_group" variable. This variable is used to point to old entry point groups
  that need to be updated to match the name of the interface.
* Remove unsupported dev and stable interfaces from "test_interfaces". These will be
  reimplemented for updated interfaces, remove for now so test_interfaces passes.
  * stable.reader
  * dev.alg
  * dev.cmap
  * dev.filename
  * dev.interp
  * dev.output
  * dev.procflow
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Major Functionality Changes
* Create `BaseInterface` class with standardized methods for common actions
* Create classes for all module-based plugin interfaces
* Create class factory to convert module-based plugins into objects
* Standardize structure for module-based plugins
* Replace all uses of `dev.*` and `stable.*` with `interfaces.*` for module-based interfaces
* Replace module-based interfaces with Interface classes
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces

### Major New Functionality
* A beta version of a new CLI is under development here. Will become more useful in
  future updates.
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Improvements
* Create new top-level `errors.py` to hold all GeoIPS-specific error classes
* Add `EntryPointError` and `PluginError` error classes
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Refactor
* Refactored many files to accomodate new interface and plugin classes
* Refactored mpl_utils.py to reduce duplication by making better use of plugin classes
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Testing Updates
* Replace a few remaining uses of $GEOIPS (see #153)
## NRLMMD-GEOIPS/geoips#69: 2023-01-25, classes for module based plugins and their interfaces
### Bug Fixes
* Fix printing of `out_dict` in list_available_modules.py
## GEOIPS/geoips#80: 2023-01-26, update system dependencies
### Documentation Updates
* installation.rst:
  * Added libgeos-dev to system requirements
  * Improved readability of environment variable instructions.
## NRLMMD-GEOIPS/geoips#83: 2023-01-31, fix bug in actions on forks
### Actions
* Update docker actions to only push to ghcr.io from `main` or for new tags.
* Disable cache-to and set cache-from to use `latest` tag.
## NRLMMD-GEOIPS/geoips#59: 2023-02-01, fix date and ls on mac
### Bug fixes
* Updated `setup.sh` and `tests/download_noaa_aws.sh` to use `gdate` on Mac
* Updated `geoips/interface_modules/output_formats/text_winds.py` to use `os.stat` rather
  than `ls --full-time` to get file creation time.
## NRLMMD-GEOIPS/geoips#86: 2023-01-31, disallow PR that don't change CHANGELOG.md
### Actions
* Add test to block merging until CHANGELOG.md has been updated
```
.github/workflows/validate-pull-request.yaml
```
## NRLMMD-GEOIPS/geoips#68: 2023-01-25, change full install requirements
### Installation and Test
* Copied extra requirements to "install_requires" in "setup.py"


## GEOIPS/geoips#80: 2023-01-26, update system dependencies
### Documentation Updates
* installation.rst:
    * Added libgeos-dev to system requirements
    * Improved readability of environment variable instructions.

## NRLMMD-GEOIPS/geoips#83: 2023-01-31, fix bug in actions on forks
### Actions
* Update docker actions to only push to ghcr.io from `main` or for new tags.
* Disable cache-to and set cache-from to use `latest` tag.
## NRLMMD-GEOIPS/geoips#59: 2023-02-01, fix date and ls on mac
### Fix linux commands `date` and `ls` on Mac
* Updated `setup.sh` and `tests/download_noaa_aws.sh` to use `gdate` on Mac
* Updated `geoips/interface_modules/output_formats/text_winds.py` to use `os.stat` rather
  than `ls --full-time` to get file creation time.
## NRLMMD-GEOIPS/geoips#86: 2023-01-31, disallow PR that don't change CHANGELOG.md
### Actions
* Add test to block merging until CHANGELOG.md has been updated
```
.github/workflows/validate-pull-request.yaml
```
## NRLMMD-GEOIPS/geoips#68: 2023-01-25, change full install requirements
### Installation and Test
* Copied extra requirements to "install_requires" in "setup.py"
* Add black, flake8-rst, and flake8-rst-doctrings requirements for code checks (ALL required)
