 | # # # Distribution Statement A. Approved for public release. Distribution unlimited.
 | # # #
 | # # # Author:
 | # # # Naval Research Laboratory, Marine Meteorology Division
 | # # #
 | # # # This program is free software: you can redistribute it and/or modify it under
 | # # # the terms of the NRLMMD License included with this program. This program is
 | # # # distributed WITHOUT ANY WARRANTY; without even the implied warranty of
 | # # # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the included license
 | # # # for more details. If you did not receive the license, for more information see:
 | # # # https://github.com/U-S-NRL-Marine-Meteorology-Division/

Version 1.11.3a0 (2023-08-25)
*****************************

* Require sphinx<7.2 due to bugs introduced 2023-08-17 7.2.x release
* Add .vscode settings repository to "full_install.sh"
* Add script to enable geoips environment
* Replace xRITDecompress with pyPublicDecompWT for seviri_hrit reader
* Use matplotlib_linear_norm colormapper for tpw_cimss and tpw_purple
* Add interactive log level, and include useful interactive logs
* Add option for curly braces in "replace_geoips_paths", use in procflows
* Update log output to include <module>.py:<linenum> (Yay VSCode!)
* Update support for xarray_to_xarray algorithm family
* Add 'no_presectoring' procflow flag to disable sectoring
* Bug fixes

Bug Fixes
=========

Update support for xarray_to_xarray algorithm family
----------------------------------------------------

Add xarray_to_xarray algorithm family to interface specification.
This REQUIRES xobj, variables, and product_name arguments, which
are now auto-populated within the single_source.py procflow
get_alg_xarray function.

::

  modified: geoips/interfaces/module_based/algorithm.py
  modified: geoips/plugins/modules/procflows/single_source.py

Add v1_11_3a0 to release note index
-----------------------------------

Documentation build fails when RST files are missing from the index.

::

  modified: docs/source/releases/index.rst

Require sphinx<7.2 in pyproject.toml
------------------------------------

Sphinx version 7.2 introduced a bug in the autodoc function, causing an import
error in the interp_gauss module.  Force sphinx version < 7.2 until that error
has been resolved.

::

  modified: pyproject.toml

Enhancements
============

Allow apply_data_range to handle xarray
---------------------------------------

* Attempt to convert xarray to numpy array and if that conversion succeeds, convert it
  back to xarray at the end of the function. This is a temporary fix that should be
  addressed more thoroughly in #308.

::

    modified: geoips/data_manipulations/corrections.py

Update sector schema to allow simplified specification
------------------------------------------------------

*From NRLMMD-GEOIPS/geoips#262: 2023-08-29,Update sector schema to
allow simplified specification*
*From NRLMMD-GEOIPS/geoips#262: 2023-08-29, Fix incorrect sectors*
*From NRLMMD-GEOIPS/geoips#110: 2023-08-29, Develop a schema for static-sector
interface plugins*
*From NRLMMD-GEOIPS/geoips#111: 2023-08-29, Additional public examples of
static sectors*
*From NRLMMD-GEOIPS/geoips#166: 2023-08-29, Create schema for
static_sectors.yaml*

* Fix circular import issue in ``*PluginBase`` classes, allowing them to
  implement their own methods.
* Add ``SectorPluginBase`` to hold sector-specific methods.
* Add and correct useable sectors using ``center`` rather than ``area_extent``.
* Switch to single ``static`` sector schema that handles all families.

::

    modified: geoips/interfaces/base.py
    modified: geoips/interfaces/yaml_based/sectors.py
    deleted: geoips/schema/sectors/area_definition_*.py
    added: geoips/schema/sectors/static.py
    modified: plugins/yaml/sectors/static/*.yaml

Update log output to include <module>.py:<linenum>
--------------------------------------------------

To allow CTRL-clicking in VSCode to a specific line number in a specific
module, update the logging output to include the full filename (<module>.py),
as well as :<linenum> with a following space.

::

  modified: geoips/commandline/log_setup.py

Add option for curly braces in "replace_geoips_paths", use in procflow SUCCESS
------------------------------------------------------------------------------

Discovered VSCode will successfully expand environment variables if they
include curly braces.  Add option to replace geoips paths to allow
including curly braces, and apply replace_geoips_paths with curly braces
to the SINGLESOURCESUCCESS and CONFIGSUCCESS outputs (so user-agnostic
output available at the end of interactive logs, including file names)

::

  modified: geoips/geoips_utils.py
  modified: geoips/plugins/modules/procflows/single_source.py
  modified: geoips/plugins/modules/procflows/config_based.py

Add interactive log level, and include useful interactive logs
--------------------------------------------------------------

The following files required interactive log statements:

::

  modified:   geoips/commandline/run_procflow.py
  modified:   geoips/compare_outputs.py
  modified:   geoips/plugins/modules/procflows/config_based.py
  modified:   geoips/plugins/modules/procflows/single_source.py


The following files were modified to no longer include interactive logs:

::

  modified:   geoips/data_manipulations/corrections.py
  modified:   geoips/geoips_utils.py
  modified:   geoips/image_utils/mpl_utils.py
  modified:   geoips/plugins/modules/readers/utils/geostationary_geolocation.py
  modified:   geoips/xarray_utils/data.py

The following files were modified to create a workflow for interactive logs:

::

  modified:   geoips/commandline/args.py
  modified:   geoips/commandline/log_setup.py


Replace xRITDecompress with pyPublicDecompWT for seviri_hrit reader
-------------------------------------------------------------------

*From NRLMMD-GEOIPS/geoips#264: 2023-08-16, Update seviri reader to
use pyPublicDecompWT*

* We had previously been using xRITDecompress which needed to be
  compiled and installed separately. This replaces xRITDecompress
  with pyPublicDecompWT which provides the same functionality but
  can be pip installed.

::

    modified: geoips/plugins/modules/readers/utils/hrit_reader.py

Installation Updates
====================

Collect test data from CIRA's NextCloud instance
------------------------------------------------

* Remove old functions for setting up test data repos
* Change gcc and gxx requirements to be unrestricted, not less than v10
* Add new script to download from nextcloud without wget/curl
* Add static URLs for downloading test datasets
* Add "test_data" function to check_system_requirements.sh to download
  test datasets
* Remove tests for gitlfs, wget, libgeos, and rclone
* Add tests for gcc and g++
* Split system package tests into "geoips_base" and "geoips_full"
* Update install instructions to remove unneeded prerequisites

::

    modified: setup.sh
    modified: setup/check_system_requirements.sh
    modified: tests/integration_tests/base_install.sh
    modified: tests/integration_tests/full_install.sh
    modified: docs/source/starter/installation.rst
    modified: docs/source/starter/expert_installation.rst
    created: setup/download_test_data.py


Add pyPublicDecompWT to dependencies and remove setup_seviri from setup script
------------------------------------------------------------------------------

*From NRLMMD-GEOIPS/geoips#264: 2023-08-16, Update seviri reader to
use pyPublicDecompWT*

* Add pypublicdecompwt to install requirements
* Remove setup_seviri from setup.py
* Remove xRITDecompress environment variables from config_geoips

::

    modified: pyproject.toml
    modified: setup_seviri
    modified: config/config_geoips

Installation Updates
====================

Add Mac installation instructions
---------------------------------

Added Mac installation instructions in mac_installation.rst and added
link in the readme. Also reworked order of Linux installation.

::

    modified: docs/source/starter/installation.rst
    created: docs/source/starter/mac_installation.rst
    modified: README.md

Add .vscode repository to full Installation
-------------------------------------------

When running full_install.sh/full_test.sh, ensure the .vscode repository is
cloned along with other source repos.

Also added "settings_repo" option to check_system_requirements (only clones,
does not attempt to pip install or uncompress test data)

::

  modified: tests/integration_tests/full_install.sh
  modified: setup/check_system_requirements.sh

Add script to enable geoips environment
---------------------------------------

Include script that sets explicit paths for geoips environment setup.

::

  new: setup/USER_MODIFY_config

Refactoring Updates
===================

Change the specification of tpw_cimss and tpw_purple colormappers
-----------------------------------------------------------------

The previous tpw_(cimss/purple) colormappers were fully defined via their own
plugins/modules/colormappers/<cmap_name>.py programs. Now, these two color
mappers are defined fully in their associated product_defaults YAML files.
This removes the complexity of these colormappers, and is an easier
implementation to follow for the future.

::

    deleted: geoips/geoips/plugins/modules/colormappers/tpw/tpw_cimss.py
    deleted: geoips/geoips/plugins/modules/colormappers/tpw/tpw_cimss.py
    modified: geoips/geoips/plugins/yaml/product_defaults/tpw/TPW-CIMSS.yaml
    modified: geoips/geoips/plugins/yaml/product_defaults/tpw/TPW-PURPLE.yaml
    modified: geoips/pyproject.toml

Make pre-sectoring in procflow optional
---------------------------------------

The previous implementation of procflows always sectors data prior to
passing to the algorithm, whether
or not the user actually wants that to happen.

While this can provide some efficiency improvements, it can also cause
issues with certain data formats, and
therefore needs an appropriate refactoring update. To implement this,
an added flag called 'no_presectoring' has beed created, and when used,
procflow pre-sectoring no longer occurs.

Also updated the GMI test script to use the "--no_presectoring" option,
and updated the test outputs from a filename with 1720Z to a filename
with 1715Z (due to the lack of sectoring, the filename uses the start
time of the full granule, rather than the start time of the pre-sectored
data).

::

    modified: geoips/geoips/plugins/modules/procflows/singe_source.py
    modified: geoips/geoips/plugins/modules/procflows/config_based.py
    modified: geoips/geoips/commandline/args.py
    renamed: 1720 -> tests/outputs/gmi.tc.89pct.imagery_clean/20200917_171519_AL202020_gmi_GPM_89pct_115kts_78p16_res1p0-cr300-clean.png
    modified: 1720 -> tests/outputs/gmi.tc.89pct.imagery_clean/20200917_171519_AL202020_gmi_GPM_89pct_115kts_78p16_res1p0-cr300-clean.png.yaml
    modified: tests/scripts/gmi.tc.89pct.imagery_clean.sh
