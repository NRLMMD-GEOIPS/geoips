name: geoips_cmd_instructions
instructions:
  - cmd_name: get
    help_str: |
      Not Implemented
    usage_str: |
      Not Implemented
    output_info:
      - Not Applicable
  - cmd_name: get family
    help_str: |
      Retrieve the appropriate GeoIPS Family alongside descriptive information of
      that family. See output_info for each datum provided when this command is
      called. For a listing of available GeoIPS families, run:
      `geoips list interfaces`.
    usage_str: |
      To use, type `geoips get family <interface_name> <family_name>`, where
      <interface_name> is a valid GeoIPS Interface and <family_name> is a supported
      family member of that interface.
    output_info:
      - Docstring
      - Family Name
      - Family Path
      - Interface Name
      - Interface Type
      - Required Args / Schema
  - cmd_name: get interface
    help_str: |
      Retrieve the appropriate GeoIPS Interface alongside descriptive information of
      that interface. See output_info for each datum provided when this command is
      called. For a listing of available GeoIPS interfaces, run:
      `geoips list interfaces`.
    usage_str: |
      To use, type `geoips get interface <interface_name>`, where <interface_name> is a
      valid GeoIPS Interface.
    output_info:
      - Absolute Path
      - Docstring
      - Documentation Link (If applicable)
      - Interface Name
      - Interface Type
      - Supported Families
  - cmd_name: get package
    help_str: |
      Retrieve the appropriate GeoIPS Package alongside descriptive information of
      that package. See output_info for each datum provided when this command is
      called. For a listing of available GeoIPS packages, run:
      `geoips list packages`.
    usage_str: |
      To use, type `geoips get package <package_name>`, where <package_name> is a
      valid GeoIPS Package.
    output_info:
      - GeoIPS Package
      - Docstring
      - Package Path
      - Documentation Link
  - cmd_name: get plugin
    help_str: |
      Retrieve the appropriate GeoIPS Plugin alongside descriptive information of
      that plugin. See output_info for each datum provided when this command is
      called. For a listing of available GeoIPS Plugins, run:
      `geoips list plugins`.
    usage_str: |
      To use, type `geoips get plugin <interface_name> <plugin_name>`, where
      <interface_name> is a valid GeoIPS Interface and <plugin_name> is a valid plugin
      identifier that has been implemented in any installed GeoIPS package.
    output_info:
      - Docstring
      - Documentation Link (If applicable)
      - Family
      - Interface Name
      - Package
      - Relative Path
      - Plugin Specific Info (signature / source_names / available overrides)
  - cmd_name: list
    help_str: |
      Not Implemented
    usage_str: |
      Not Implemented
    output_info:
      - Not Applicable
  - cmd_name: list interface
    help_str: |
      List off plugins found under a certain interface. This is useful for seeing what
      plugins have been implemented through all, or a certain, GeoIPS Package. This
      information can then be used with
      `geoips get-plugin <interface_name> <plugin_name>` to get more information about a
      certain plugin.
    usage_str: |
      To use, type `geoips list interface <interface_name>`. Optionally includes `-p`
      flag for seeing what plugins are in a certain package (-p). For example, to see
      what plugins under a certain interface have been created in a single package,
      run `geoips list interface <interface_name> -p <pkg_name>`, or you can remove the
      `-p` flag to see what's been created in every package.
    output_info:
      - Family
      - Interface Name
      - Interface Type
      - Package
      - Plugin Name
      - Relative Path
  - cmd_name: list interfaces
    help_str: |
      List off every GeoIPS Interface. This is useful for seeing what is
      available throughout GeoIPS, but can also be extended to see what interfaces have
      been implemented in other geoips package, or just a certain package. This
      information can then be used with `geoips get-interface <interface_name>` to get
      more information about a certain interface.
    usage_str: |
      To use, type `geoips list interfaces`. Optionally includes `-i` and `-p` flags for
      seeing what has been implemented (-i) in a certain package (-p), or all packages.
      For example, to see what interfaces have been implemented in a certain package,
      run `geoips list interfaces -i -p <pkg_name>`, or you can remove the `-p` flag to
      see what's been implemented in every package.
    output_info:
      - Absolute Path
      - Docstring
      - Documentation Link (if applicable)
      - Interface Name
      - Interface Type
      - Package
      - Supported Families
  - cmd_name: list plugins
    help_str: |
      List off plugins found under all, or a specified GeoIPS package. This information
      can then be used with `geoips get-plugin <interface_name> <plugin_name>` to get
      more information about a certain plugin.
    usage_str: |
      To use, type `geoips list plugins`. Optionally includes `-p` flag for
      seeing what plugins are in a certain package (-p). For example, to see what
      plugins have been created in a single package, run
      `geoips list plugins -p <pkg_name>`, or you can remove the `-p` flag to see what's
      been created in every package.
    output_info:
      - Family
      - Interface Name
      - Interface Type
      - Package
      - Plugin Name
      - Relative Path
  - cmd_name: list packages
    help_str: |
      List off packages found under the GeoIPS Namespace, alongside their path and
      top-level docstring. This command will list every  GeoIPS Package found, provided
      it has already been installed.
    usage_str: |
      To use, type `geoips list packages`.
    output_info:
      - Docstring
      - Package
      - Relative Path
  - cmd_name: list scripts
    help_str: |
      List off scripts found under all, or a specified GeoIPS package. This information
      can then be used with `geoips run <package_name> <script_name>` to run a certain
      process workflow, defined in a bash script.
    usage_str: |
      To use, type `geoips list scripts`. Optionally includes `-p` flag for
      seeing what scripts are in a certain package (-p). For example, to see what
      scripts have been created in a single package, run
      `geoips list scripts -p <pkg_name>`, or you can remove the `-p` flag to see what's
      been created in every package.
    output_info:
      - Package
      - Script Name
  - cmd_name: run
    help_str: |
      Run a geoips process workflow (procflow), given a GeoIPS package and a script
      name. This will do the exact same thing as being in the directory of a certain
      script, and running it via `./<script_name>`. To see what scripts are available,
      you can run `geoips list-scripts <-p>`, where `-p` can be used alongside a GeoIPS
      Package name if you want scripts from a single package.
    usage_str: |
      To use, type `geoips run <package_name> <script_name>`.
    output_info:
      - Log Output of the Process Workflow (Procflow)
  - cmd_name: validate
    help_str: |
      Validate a GeoIPS Plugin found at <file_path>. While this is done under the hood via
      GeoIPS, this is an easy way to test whether or not the plugin you are developing
      is valid.
    usage_str: |
      To use, type `geoips validate <file_path>`.
    output_info:
      - A message telling you if the plugin is valid or not and why.
