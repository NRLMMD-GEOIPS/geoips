name: Build Docker Image

defaults:
  run:
    shell: bash

on:
  # Triggers when code is pushed to "main" branch
  # This should only happen when PRs are merged
  push:
    branches:
      - main

  # Triggers the workflow when pull request created and updated
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main

  # Triggers when a new release is created
  release:
    types:
      - published

  # Allows run of this workflow manually from the Actions tab
  workflow_dispatch:


env:
  REGISTRY: ghcr.io
  TEST_TAG: geoips:test

jobs:
  build_docker_image:
    runs-on: ${{ vars.RUNNER }}
    # Can't write to registry without this
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Need to make repository lowercase
      - name: Make image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Extract branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> ${GITHUB_ENV}

      - name: Extract release tag
        if: github.event_name == 'release'
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> ${GITHUB_ENV}

      - name: Set Docker tags
        run: |
          # Set the DOCKER_TAGS environment variable based on the event
          # If the event is a release, use the release tag
          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            echo "DOCKER_TAGS=${RELEASE_TAG},stable" >> $GITHUB_ENV
          # If the event is a push to main, use "latest"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "DOCKER_TAGS=latest" >> $GITHUB_ENV
          # Otherwise, use the branch name
          else
            echo "DOCKER_TAGS=${BRANCH_NAME}" >> $GITHUB_ENV
          fi

      - name: Build and Push image
        uses: docker/build-push-action@v3.1.0
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAGS }}
          file: "Dockerfile"
          # cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:latest