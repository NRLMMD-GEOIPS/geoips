name: Generate Release Note with Brassy

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  generate_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract branch name
        shell: bash
        run: |
          git rev-parse --abbrev-ref HEAD
          echo ${{ github.ref }}
          export raw=$(git branch -r --contains ${{ github.ref }})
          echo $raw
          branch=${raw##*/}
          echo $branch
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "Branch is $branch."
        id: extract_branch

      - name: Extract version
        run: |
          git fetch --quiet --tags origin # needed bc action above doesn't pull tags
          export GEOIPS_VERS=`git -C . tag --sort=-creatordate | grep -v osr | head -n 1`
          echo "version=$GEOIPS_VERS" >> $GITHUB_OUTPUT
          echo "Version is $GEOIPS_VERS"
        id: extract_version

      - name: Install Brassy
        run: |
          pip3 install brassy

      - name: Run Brassy on file
        run: |
          touch RELEASE_NOTE_HEADER
          echo ".. dropdown:: Distribution Statement" >> RELEASE_NOTE_HEADER
          echo " " >> RELEASE_NOTE_HEADER
          echo " | # # # This source code is protected under the license referenced at" \
          >> RELEASE_NOTE_HEADER
          echo " | # # # https://github.com/NRLMMD-GEOIPS." \
          >> RELEASE_NOTE_HEADER

          export output_file=v$(echo "${{ steps.extract_version.outputs.version }}" | tr . _).rst
          echo $output_file

          brassy ./docs/source/releases/latest \
          --output-file ./docs/source/releases/$output_file \
          --prefix-file RELEASE_NOTE_HEADER \
          --no-rich \
          --release-version ${{ steps.extract_version.outputs.version }}

          rm RELEASE_NOTE_HEADER
          
      - name: Delete pushed tag
        run: |
          git push --delete origin ${{ steps.extract_version.outputs.version }}
          git tag --delete ${{ steps.extract_version.outputs.version }}
          
      - name: Commit new release note and delete old yaml files
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout -b \
            update-release-note-${{ steps.extract_branch.outputs.branch }}
          git add ./docs/source/releases/*.rst
          git commit -m "Add Built Release Note"
          git rm ./docs/source/releases/latest/*.yaml
          git commit -m "Remove old yaml files"
          git tag ${{ steps.extract_branch.outputs.version }}

      - name: Push new release note to branch
        run: |
          git push --set-upstream origin \
            update-release-note-${{ steps.extract_branch.outputs.branch }}
          git push --set-upstream origin \
            update-release-note-${{ steps.extract_branch.outputs.branch }} --tags

      - name: create pull request
        run: |
          gh pr create \
            --base ${{ steps.extract_branch.outputs.branch }} \
            --head update-release-note-${{ steps.extract_branch.outputs.branch }} \
            --title \
            'Merge new release note into ${{ steps.extract_branch.outputs.branch }}' \
            --body 'Created by manually run Github action.'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
