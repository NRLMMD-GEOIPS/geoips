name: Release note update
defaults:
  run:
    shell: bash

env:
  COMMIT_INTO: remotes/origin/main

on:
  # Triggers the workflow when pull request created and updated
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
  # Allows run of this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release_v_change_detection:
    runs-on: ${{ vars.RUNNER }}
    steps:
      - name: Checkout geoips repo default branch
        uses: actions/checkout@v3 # v3 is the latest for checkout
        with:
          fetch-depth: 0
          repository: ${{ vars.ORGANIZATION }}/geoips
          ref: ${{ vars.DEFAULT_BRANCH }}
          token: ${{ secrets.GEOIPS_TOKEN }}
          path: geoips_default_branch
      - name: Checkout current repo default branch
        uses: actions/checkout@v3 # v3 is the latest for checkout
        with:
          fetch-depth: 0
          path: geoips_plugin_repo
      - name: Detect new and modified release files
        run: |
          echo "cat $PWD/geoips_default_branch/update_this_release_note"
          ls -l $PWD/geoips_default_branch/update_this_release_note
          current_release_note=`cat $PWD/geoips_default_branch/update_this_release_note`
          echo "git -C $PWD/geoips_plugin_repo diff --name-only --diff-filter=AM ${COMMIT_INTO} -- $PWD/geoips_plugin_repo/docs/source/releases/v*.rst"
          ret=$(git -C $PWD/geoips_plugin_repo diff --name-only --diff-filter=AM \
              ${COMMIT_INTO} -- $PWD/geoips_plugin_repo/docs/source/releases/v*.rst)
          echo "Current release note: $current_release_note"
          echo "Release note files modified this PR:"
          for file in ${ret[@]}; do
              echo "    $file"
          done
          if [[ "${ret}" != *"$current_release_note"* ]]; then
              echo "FAILED: No release note changes detected"
              echo "Please enter change logs in $current_release_note"
              exit 1
          else
              echo "PASSED"
          fi
